
@page "/jotunn"
@using System.Reflection.Metadata
@using NorseMythologyIndex.Models
@using NorseMythologyIndex.Services
@inject MythologyService MythologyService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<PageTitle>Jötunn</PageTitle>
<div class="page-container">
    <h1>Jötunn</h1>

    @if (isLoading)
    {
        <div class="loading">
            <p>Loading Jötunn...</p>
        </div>
    }
    else if (jotunItems.Any())
    {
        <div class="tables-container">
            <table class="as-table">
                <tr>
                    <th style="font-size: 18px">Male</th>
                </tr>
                @foreach (var item in jotunItems)
                {
                        @if (item.Value.Tags.Contains("Male"))
                        {
                            <tr>
                                <td > <NavLink class="item" href="@($"/item/{item.Key}")">@item.Key</NavLink></td>
                            </tr>
                        }
                }
            </table>
            <table class="as-table">
                <tr>
                    <th style="font-size: 18px">Female</th>
                </tr>
                @foreach (var item in jotunItems)
                {
                    @if (item.Value.Tags.Contains("Female"))
                    {
                        <tr>
                            <td > <NavLink class="item" href="@($"/item/{item.Key}")">@item.Key</NavLink></td>
                        </tr>
                    }
                }
            </table>
            <table class="as-table">
                <tr>
                    <th style="font-size: 18px">Creature</th>
                </tr>
                @foreach (var item in jotunItems)
                {
                    @if (item.Value.Tags.Contains("Creature"))
                    {
                        <tr>
                            <td  > <NavLink class="item" href="@($"/item/{item.Key}")">@item.Key</NavLink></td>
                        </tr>
                    }
                }
            </table>
        </div>
    }
    else
    {
        <p>No Æsir Items found.</p>
    }
</div>

@code {
    private Dictionary<string, MythologyItem> jotunItems = new();
    private bool isLoading = true;
    private string? selectedItemName;
    
    
    protected override async Task OnInitializedAsync()
    {
        jotunItems = await MythologyService.GetItemsByTypeAsync("Jötunn");
        isLoading = false;
    }

}

<style>
    .page-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 6rem;
        height: fit-content;
    }

    h1 {
        color: #2c3e50;
        margin-bottom: 2rem;
        font-size: 2.5rem;
        text-align: center;
    }
    .tables-container{
        margin:auto;
        width: fit-content;
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-gap: 5rem;
    }
    .as-table{
        height: fit-content;
    }
    .item {
        margin: 0;
        padding: 0;
        text-decoration: none;
        color: black;
    }
    .loading {
        text-align: center;
        padding: 3rem;
        font-size: 1.2rem;
        color: #666;
    }
</style>


