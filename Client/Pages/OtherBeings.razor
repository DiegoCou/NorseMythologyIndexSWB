
@page "/otherbeings"
@using System.Reflection.Metadata
@using NorseMythologyIndex.Models
@using NorseMythologyIndex.Services
@inject MythologyService MythologyService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<PageTitle>Other Beings</PageTitle>
<div class="page-container">
    <h1>Other beigns</h1>

    @if (isLoading)
    {
        <div class="loading">
            <p>Loading...</p>
        </div>
    }
    else if (mythItems.Any())
    {
        <!--
        <div class="Items-grid">
            @foreach (var Item in mythItems)
            {
                <div class="Item-card" @onclick="(() => SelectItem(Item.Key))">
                    <h4>@Item.Key</h4>
                    
                    <div class="tags">
                        @foreach (var tag in Item.Value.Tags)
                        {
                            <span class="tag">@tag</span>
                        }
                    </div>  
                </div>
            }
        </div>
        !-->
        <div style="width:40rem; display: inline-block" onclick="document.querySelector('.navbar-toggler').click()">
            <table style=" text-align: left; float: left">
                <tr>
                    <th style="font-size: 18px">Male</th>
                </tr>
                @foreach (var item in mythItems)
                {
                        @if (item.Value.Tags.Contains("Male"))
                        {
                            <tr>
                                <td class="myth-table-item"> <NavLink class="nav-link" href="@($"/item/{item.Key}")">@item.Key</NavLink></td>
                            </tr>
                        }
                }
            </table>
            <table style=" text-align: left; float: right">
                <tr>
                    <th style="font-size: 18px">Female</th>
                </tr>
                @foreach (var item in mythItems)
                {
                    @if (item.Value.Tags.Contains("Female"))
                    {
                        <tr>
                            <td class="myth-table-item" > <NavLink class="nav-link" href="@($"/item/{item.Key}")">@item.Key</NavLink></td>
                        </tr>
                    }
                }
            </table>
        </div>
    }
    else
    {
        <p>No Æsir Items found.</p>
    }
</div>

@code {
    private Dictionary<string, MythologyItem> mythItems = new();
    private bool isLoading = true;
    private string? selectedItemName;
    
    
    protected override async Task OnInitializedAsync()
    {
        mythItems = await MythologyService.GetItemsByTypeAsync("Other");
        isLoading = false;
    }

}

<style>
    .myth-table-item{
        padding: 0.1rem;
    }
    .page-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 6rem;
        height: fit-content;
    }

    h1 {
        color: #2c3e50;
        margin-bottom: 2rem;
        font-size: 2.5rem;
    }

    .loading {
        text-align: center;
        padding: 3rem;
        font-size: 1.2rem;
        color: #666;
    }

    .Items-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1.5rem;
        padding: 1rem;
        height: 40rem;
        overflow: scroll;
    }

    .Item-card {
        background: white;
        border-radius: 8px;
        box-shadow: 0px 0px 1px 2px rgba(0,0,0,0.1);
        cursor: pointer;
    }

    .Item-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .Item-card h3 {
        margin: 0 0 1rem 0;
        color: #2c3e50;
        font-size: 1.5rem;
    }

    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .tag {
        background: #3498db;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        font-size: 0.8rem;
    }

    .Item-detail {
        background: white;
        padding: 3rem;
        border-radius: 8px;
        box-shadow: 0 4px 16px rgba(0,0,0,0.1);
        position: relative;
        margin: -43rem auto;
        width: 60rem;
    }

    .close-btn {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: #e74c3c;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
    }

    .close-btn:hover {
        background: #c0392b;
    }

    .tags-section {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        margin: -1rem 0;
    }

    .attestation-section {
        border-left: 4px solid #3498db;
        padding-left: 1.5rem;
        margin: 2rem 0;
    }

    .source-link {
        color: #3498db;
        text-decoration: none;
        font-weight: bold;
        display: inline-block;
    }

    .source-link:hover {
        text-decoration: underline;
    }

    .reference h5 {
        color: #34495e;
        margin-bottom: 0.75rem;
    }

    .text-content {
        margin: 0.75rem 0;
        line-height: 1.6;
        align-content: center;
        width: 100%;
    }
    .textarea-content{
        border: 0;
        border-radius: 10px;
        background-color: #f8f9fa;
        padding: 1rem;
        white-space: pre-line;
        resize: none;
        text-align: left;
        font-size: 1rem;
    }
    .textarea-explanation {
        white-space: pre-line;
        text-align: left;
        margin: 0 0 1rem 0;
        float:left;
        padding: 0 0.3rem;
    }

    .quote blockquote {
        border-left: 3px solid #95a5a6;
        padding-left: 1rem;
        margin: 1rem 0;
        font-style: italic;
        color: #555;
    }

    .ref-link {
        color: #2980b9;
        text-decoration: none;
        margin: 0 ;
        padding: 0 0.3rem;
        font-weight: bold;
    }

    .ref-link:hover {
        text-decoration: underline;
    }
</style>


